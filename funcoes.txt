-- Função para criar o mini chão e as barreiras
local function Criarchao(position)
    -- Cria o mini chão
    local part = Instance.new("Part")
    part.Size = Vector3.new(10, 1, 10) -- Define o tamanho do mini chão (quadrado)
    part.Position = position -- Define a posição do mini chão
    part.Anchored = true -- Faz o mini chão ficar parado no lugar
    part.BrickColor = BrickColor.new("Bright green") -- Define a cor do mini chão
    part.Parent = game.Workspace

    -- Função para criar uma barreira
    local function createBarrier(position, size)
        local barrier = Instance.new("Part")
        barrier.Size = size
        barrier.Position = position
        barrier.Anchored = true
        barrier.CanCollide = true
        barrier.Transparency = 1 -- Define a barreira como totalmente transparente
        barrier.BrickColor = BrickColor.new("Bright blue")
        barrier.Parent = game.Workspace
    end

    -- Tamanho das barreiras
    local barrierThickness = 1
    local barrierHeight = 10

    -- Posições das barreiras ao redor do mini chão
    local barrierPositions = {
        Vector3.new(part.Position.X, part.Position.Y + barrierHeight / 2, part.Position.Z - part.Size.Z / 2 - barrierThickness / 2), -- Frente
        Vector3.new(part.Position.X, part.Position.Y + barrierHeight / 2, part.Position.Z + part.Size.Z / 2 + barrierThickness / 2), -- Trás
        Vector3.new(part.Position.X - part.Size.X / 2 - barrierThickness / 2, part.Position.Y + barrierHeight / 2, part.Position.Z), -- Esquerda
        Vector3.new(part.Position.X + part.Size.X / 2 + barrierThickness / 2, part.Position.Y + barrierHeight / 2, part.Position.Z), -- Direita
    }

    -- Cria as barreiras
    for _, pos in ipairs(barrierPositions) do
        if pos.Z == part.Position.Z then
            createBarrier(pos, Vector3.new(barrierThickness, barrierHeight, part.Size.Z)) -- Barreiras laterais
        else
            createBarrier(pos, Vector3.new(part.Size.X, barrierHeight, barrierThickness)) -- Barreiras frente e trás
        end
    end
end


local function ShowText(text, count)
    local gui = Instance.new("ScreenGui")
    gui.Name = "ItemTextGui"
    gui.Parent = game.Players.LocalPlayer.PlayerGui
    
    local textLabel = Instance.new("TextLabel")
    textLabel.Size = UDim2.new(0.8, 0, 0.2, 0)
    textLabel.Position = UDim2.new(0.1, 0, 0.35, 0)  -- Ajuste a posição para ficar mais acima
    textLabel.BackgroundTransparency = 1
    textLabel.TextColor3 = Color3.fromRGB(255, 69, 50)
    textLabel.TextStrokeColor3 = Color3.fromRGB(255, 69, 50)  -- Cor da borda do texto
    textLabel.TextSize = 30
    textLabel.Font = Enum.Font.SourceSans
    textLabel.Text = text
    textLabel.Parent = gui
    
    textLabel.BorderSizePixel = 0
    textLabel.TextWrapped = true
    textLabel.TextScaled = true
    textLabel.TextStrokeTransparency = 0
    textLabel.TextXAlignment = Enum.TextXAlignment.Center

    local timerGui = Instance.new("ScreenGui")
    timerGui.Name = "TimerGui"
    timerGui.Parent = game.Players.LocalPlayer.PlayerGui

    local timerTextLabel = Instance.new("TextLabel")
    timerTextLabel.Parent = timerGui
    timerTextLabel.Size = UDim2.new(0, 100, 0, 30)  -- Ajuste o tamanho para 30 pixels de altura
    timerTextLabel.Position = UDim2.new(0.5, -50, 0.55, 0)  -- Ajuste a posição para ficar abaixo do texto principal
    timerTextLabel.BackgroundTransparency = 1
    timerTextLabel.TextColor3 = Color3.new(50/255, 255/255, 107/255)
    timerTextLabel.Font = Enum.Font.SourceSans
    timerTextLabel.TextSize = 50
    timerTextLabel.Text = tostring(count)

    local countdown = coroutine.wrap(function()
        for i = count, 1, -1 do
            timerTextLabel.Text = tostring(i)
            wait(1)
        end
        timerGui:Destroy()
        gui:Destroy()
    end)
    countdown()
end

local function congelar(tempo)
    local character = game.Players.LocalPlayer.Character
    if character then
        character:FindFirstChildOfClass("Humanoid").RootPart.Anchored = true
        game.StarterGui:SetCore("ChatMakeSystemMessage", {
            Text = "Personagem congelado por " .. tostring(tempo) .. " segundos!",
            Color = Color3.new(1, 0, 0)
        })

        wait(tempo)
        
        character:FindFirstChildOfClass("Humanoid").RootPart.Anchored = false
        game.StarterGui:SetCore("ChatMakeSystemMessage", {
            Text = "Personagem descongelado!",
            Color = Color3.new(0, 1, 0)
        })
    end
end


local function noclip()
    local character = game.Players.LocalPlayer.Character
    if character then
        for _, v in pairs(character:GetDescendants()) do
            if v:IsA("BasePart") then
                v.CanCollide = false
            end
        end
    end
end


local function clip()
    local character = game.Players.LocalPlayer.Character
    if character then
        for _, v in pairs(character:GetDescendants()) do
            if v:("BasePart") then
                v.CanCollide = true
            end
        end
    end
end
